{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/robot3/machine.js","../../node_modules/robot3/debug.js","../../src/lib/PatchMachines.js","../../node_modules/svelte/store/index.mjs","../../src/lib/stores/MachineStore.js","../../src/lib/plinky/params.js","../../src/lib/utils.js","../../src/lib/plinky/param-icons.js","../../src/lib/plinky/patch.js","../../src/lib/webusb/WebUSBPort.js","../../src/lib/webusb/WebUSBSerial.js","../../src/lib/PlinkyMachine.js","../../src/Param.svelte","../../src/App.svelte","../../src/lib/compress.js","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.48.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","function valueEnumerable(value) {\n  return { enumerable: true, value };\n}\n\nfunction valueEnumerableWritable(value) {\n  return { enumerable: true, writable: true, value };\n}\n\nexport let d = {};\nlet truthy = () => true;\nlet empty = () => ({});\nlet identity = a => a;\nlet callBoth = (par, fn, self, args) => par.apply(self, args) && fn.apply(self, args);\nlet callForward = (par, fn, self, [a, b]) => fn.call(self, par.call(self, a, b), b);\nlet create = (a, b) => Object.freeze(Object.create(a, b));\n\nfunction stack(fns, def, caller) {\n  return fns.reduce((par, fn) => {\n    return function(...args) {\n      return caller(par, fn, this, args);\n    };\n  }, def);\n}\n\nfunction fnType(fn) {\n  return create(this, { fn: valueEnumerable(fn) });\n}\n\nlet reduceType = {};\nexport let reduce = fnType.bind(reduceType);\nexport let action = fn => reduce((ctx, ev) => !!~fn(ctx, ev) && ctx);\n\nlet guardType = {};\nexport let guard = fnType.bind(guardType);\n\nfunction filter(Type, arr) {\n  return arr.filter(value => Type.isPrototypeOf(value));\n}\n\nfunction makeTransition(from, to, ...args) {\n  let guards = stack(filter(guardType, args).map(t => t.fn), truthy, callBoth);\n  let reducers = stack(filter(reduceType, args).map(t => t.fn), identity, callForward);\n  return create(this, {\n    from: valueEnumerable(from),\n    to: valueEnumerable(to),\n    guards: valueEnumerable(guards),\n    reducers: valueEnumerable(reducers)\n  });\n}\n\nlet transitionType = {};\nlet immediateType = {};\nexport let transition = makeTransition.bind(transitionType);\nexport let immediate = makeTransition.bind(immediateType, null);\n\nfunction enterImmediate(machine, service, event) {\n  return transitionTo(service, machine, event, this.immediates) || machine;\n}\n\nfunction transitionsToMap(transitions) {\n  let m = new Map();\n  for(let t of transitions) {\n    if(!m.has(t.from)) m.set(t.from, []);\n    m.get(t.from).push(t);\n  }\n  return m;\n}\n\nlet stateType = { enter: identity };\nexport function state(...args) {\n  let transitions = filter(transitionType, args);\n  let immediates = filter(immediateType, args);\n  let desc = {\n    final: valueEnumerable(args.length === 0),\n    transitions: valueEnumerable(transitionsToMap(transitions))\n  };\n  if(immediates.length) {\n    desc.immediates = valueEnumerable(immediates);\n    desc.enter = valueEnumerable(enterImmediate);\n  }\n  return create(stateType, desc);\n}\n\nlet invokePromiseType = {\n  enter(machine, service, event) {\n    this.fn.call(service, service.context, event)\n      .then(data => service.send({ type: 'done', data }))\n      .catch(error => service.send({ type: 'error', error }));\n    return machine;\n  }\n};\nlet invokeMachineType = {\n  enter(machine, service, event) {\n    service.child = interpret(this.machine, s => {\n      service.onChange(s);\n      if(service.child == s && s.machine.state.value.final) {\n        delete service.child;\n        service.send({ type: 'done', data: s.context });\n      }\n    }, service.context, event);\n    if(service.child.machine.state.value.final) {\n      let data = service.child.context;\n      delete service.child;\n      return transitionTo(service, machine, { type: 'done', data }, this.transitions.get('done'));\n    }\n    return machine;\n  }\n};\nexport function invoke(fn, ...transitions) {\n  let t = valueEnumerable(transitionsToMap(transitions));\n  return machine.isPrototypeOf(fn) ?\n    create(invokeMachineType, {\n      machine: valueEnumerable(fn),\n      transitions: t\n    }) :\n    create(invokePromiseType, {\n      fn: valueEnumerable(fn),\n      transitions: t\n    });\n}\n\nlet machine = {\n  get state() {\n    return {\n      name: this.current,\n      value: this.states[this.current]\n    };\n  }\n};\n\nexport function createMachine(current, states, contextFn = empty) {\n  if(typeof current !== 'string') {\n    contextFn = states || empty;\n    states = current;\n    current = Object.keys(states)[0];\n  }\n  if(d._create) d._create(current, states);\n  return create(machine, {\n    context: valueEnumerable(contextFn),\n    current: valueEnumerable(current),\n    states: valueEnumerable(states)\n  });\n}\n\nfunction transitionTo(service, machine, fromEvent, candidates) {\n  let { context } = service;\n  for(let { to, guards, reducers } of candidates) {  \n    if(guards(context, fromEvent)) {\n      service.context = reducers.call(service, context, fromEvent);\n\n      let original = machine.original || machine;\n      let newMachine = create(original, {\n        current: valueEnumerable(to),\n        original: { value: original }\n      });\n\n      if (d._onEnter) d._onEnter(machine, to, service.context, context, fromEvent);\n      let state = newMachine.state.value;\n      return state.enter(newMachine, service, fromEvent);\n    }\n  }\n}\n\nfunction send(service, event) {\n  let eventName = event.type || event;\n  let { machine } = service;\n  let { value: state, name: currentStateName } = machine.state;\n  \n  if(state.transitions.has(eventName)) {\n    return transitionTo(service, machine, event, state.transitions.get(eventName)) || machine;\n  } else {\n    if(d._send) d._send(eventName, currentStateName);\n  }\n  return machine;\n}\n\nlet service = {\n  send(event) {\n    this.machine = send(this, event);\n    \n    // TODO detect change\n    this.onChange(this);\n  }\n};\n\nexport function interpret(machine, onChange, initialContext, event) {\n  let s = Object.create(service, {\n    machine: valueEnumerableWritable(machine),\n    context: valueEnumerableWritable(machine.context(initialContext, event)),\n    onChange: valueEnumerable(onChange)\n  });\n  s.send = s.send.bind(s);\n  s.machine = s.machine.state.value.enter(s.machine, s, event);\n  return s;\n} \n","import { d, invoke } from './machine.js';\n\nconst invokePromiseType = Object.getPrototypeOf(invoke(Promise.resolve()));\n\nfunction unknownState(from, state) {\n  throw new Error(`Cannot transition from ${from} to unknown state: ${state}`);\n}\n\nd._create = function(current, states) {\n  if(!(current in states)) {\n    throw new Error(`Initial state [${current}] is not a known state.`);\n  }\n  for(let p in states) {\n    let state = states[p];\n    for(let [, candidates] of state.transitions) {\n      for(let {to} of candidates) {\n        if(!(to in states)) {\n          unknownState(p, to);\n        }\n      }\n    }\n    if (invokePromiseType.isPrototypeOf(state)) {\n      let hasErrorFrom = false;\n      for(let [, candidates] of state.transitions) {\n        for(let {from} of candidates) {\n          if (from === 'error') hasErrorFrom = true;\n        }\n      }\n      if(!hasErrorFrom) {\n        console.warn(\n          `When using invoke [current state: ${p}] with Promise-returning function, you need to add 'error' state. Otherwise, robot will hide errors in Promise-returning function`\n        );\n      }\n    }\n  }\n};\n\nd._send = function(eventName, currentStateName) {\n  throw new Error(`No transitions for event ${eventName} from the current state [${currentStateName}]`);\n};\n","import {\n  action,\n  createMachine,\n  state as final,\n  guard,\n  immediate,\n  interpret,\n  invoke,\n  reduce,\n  state,\n  transition,\n} from 'robot3';\n\nconst USB_BUFFER_SIZE = 64;\n\n// ██╗      ██████╗  █████╗ ██████╗     ██████╗  █████╗ ████████╗ ██████╗██╗  ██╗\n// ██║     ██╔═══██╗██╔══██╗██╔══██╗    ██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██║  ██║\n// ██║     ██║   ██║███████║██║  ██║    ██████╔╝███████║   ██║   ██║     ███████║\n// ██║     ██║   ██║██╔══██║██║  ██║    ██╔═══╝ ██╔══██║   ██║   ██║     ██╔══██║\n// ███████╗╚██████╔╝██║  ██║██████╔╝    ██║     ██║  ██║   ██║   ╚██████╗██║  ██║\n// ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝     ╚═╝     ╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝\n//\n//\n// How the load patch machine works:\n//\n// 1. The main state machine transitions into the loadPatch state, which starts\n//    this state machine. \n// 2. Data is sent to plinky requesting a patch (sendLoadRequest)\n// 3. Plinky starts sending over a bunch of data in sequence\n// 4. WebUSBPlinky intercepts those and invokes this machine with the 'data'\n//    transition.\n// 5. When the first data event happens, it is evaluated (hasHeader) and\n//    processed (processHeader) to set the number of bytes we're expecting\n//    in the patch.\n// 6. With each subsequent 'data' transition, Plinky keeps advancing this\n//    machine's 'read' state, which invokes the readBytes function. It takes\n//    the payload from the data event & saves it in the state machine context.\n// 7. When there's no more data to load, the state machine is finished, and the\n//    parent machine calling it gets the final result payload.\n//\n\n/**\n * Process the header from data event from WebUSBPlinky\n * @param {*} ctx - State machine context\n * @param {*} ev - Data event from WebUSBPlinky\n * @returns {*} - New state machine context\n */\nfunction processHeader(ctx, ev) {\n  const data = new Uint8Array(ev.data);\n  // Set the header\n  ctx.header = data;\n  // Slot (patch number) to load from is in 5th index\n  ctx.slot = data[5];\n  // We're going to be counting how many bytes we have read to know when to stop\n  ctx.processedBytes = 0;\n  // Bytes 8 and 9 in the header contains how many bytes are going to be sent as an uint16\n  ctx.bytesToProcess = data[8]+data[9]*256;\n  // Keep all results in an array until the end, when we can concat them all into a single ArrayBuffer\n  ctx.result = [];\n  console.log(`Loading from slot: ${ctx.slot} - Expecting ${ctx.bytesToProcess} bytes (header: ${ctx.header})`);\n  return ctx;\n}\n\n/**\n * Check if an event has a header for loading a patch.\n * @param {*} ctx - State machine context\n * @param {*} ev - Data event from WebUSBPlinky\n * @returns {Boolean} - True if correct header is present in event data\n */\nfunction hasHeader(ctx, ev) {\n  const data = new Uint8Array(ev.data);\n  if(!data) return false;\n  if(data.byteLength !== 10) return false;\n  if (data[0]!==0xf3) return false;\n  if (data[1]!==0x0f) return false;\n  if (data[2]!==0xab) return false;\n  if (data[3]!==0xca) return false;\n  if (data[4]!==1) return false;\n  if (data[6]!==0) return false;\n  if (data[7]!==0) return false;\n  return true;\n}\n\n/**\n * Read incoming bytes and add them to the result\n * @param {*} ctx - State machine context\n * @param {*} ev - Data event from WebUSBPlinky\n * @returns {*} - State machine context with data added to result\n */\nfunction readBytes(ctx, ev) {\n  // Incoming patch data is in the event\n  const data = new Uint8Array(ev.data);\n  ctx.result.push(data);\n  ctx.processedBytes += data.byteLength;\n  return ctx;\n}\n\n/**\n * Check if state machine should continue to process bytes\n * @param {*} ctx - State machine context\n * @returns {Boolean} - True if all bytes have been processed\n */\nfunction hasNoMoreData(ctx) {\n  return ctx.processedBytes >= ctx.bytesToProcess;\n}\n\n/**\n * Send a packet asking to load a patch from Plinky\n * @param {*} ctx - State machine context\n * @returns {Boolean} - True when sent\n */\nasync function sendLoadRequest(ctx) {\n  console.log('sendLoadRequest', ctx.port, 'patchNumber', ctx.patchNumber);\n  // [0xf3,0x0f,0xab,0xca,  0,   32,             0,0,0,0 ]\n  //  header                get  current preset  padding ]\n  const buf = new Uint8Array([0xf3,0x0f,0xab,0xca,0,ctx.patchNumber,0,0,0,0]);\n  ctx.port.send(buf);\n  return true;\n}\n\n/**\n * Loading state machine\n */\nexport const PatchLoadMachine = createMachine({\n  idle: state(\n    immediate('getHeader', action(sendLoadRequest)), // upon entering this machine, immediately send the patch load request\n  ),\n  getHeader: state(\n    transition('data', 'header', guard(hasHeader)), // the next state guards that there is a header in the first data event coming from WebUSBPlinky\n  ),\n  header: state(\n    immediate('read', reduce(processHeader)) // this reads the header and sets the parameters for the patch loading (how many bytes we need to read)\n  ),\n  read: state(\n    immediate('finished', guard(hasNoMoreData)), // check if we have any more data, if not then go to the finished state\n    transition('data', 'read', reduce(readBytes)), // otherwise transition back to the read state when receiving another data event from WebUSBPlinky\n  ),\n  finished: final()\n}, (ctx) => ({ ...ctx }));\n\n// ███████╗ █████╗ ██╗   ██╗███████╗    ██████╗  █████╗ ████████╗ ██████╗██╗  ██╗\n// ██╔════╝██╔══██╗██║   ██║██╔════╝    ██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██║  ██║\n// ███████╗███████║██║   ██║█████╗      ██████╔╝███████║   ██║   ██║     ███████║\n// ╚════██║██╔══██║╚██╗ ██╔╝██╔══╝      ██╔═══╝ ██╔══██║   ██║   ██║     ██╔══██║\n// ███████║██║  ██║ ╚████╔╝ ███████╗    ██║     ██║  ██║   ██║   ╚██████╗██║  ██║\n// ╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚══════╝    ╚═╝     ╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝\n//\n// The save patch machine is basically the same as the load machine, but\n// in reverse. The first event is the write request (sendWriteRequest), after\n// which we just send the necessary data over to Plinky.\n//\n// The machine loops over the necessary bytes like the load machine does, then\n// transitions out.\n//\n\n/**\n * Send a header asking to write a patch to Plinky\n * @param {*} ctx - State machine context\n * @returns {Boolean} - True when sent\n */\nasync function sendWriteRequest(ctx) {\n  console.log('sendWriteRequest', ctx.port, 'patchNumber', ctx.patchNumber);\n  // [0xf3,0x0f,0xab,0xca,  1,   32,             0,0,0,0 ]\n  //  header                set  current preset  padding ]\n  //(header: 243,15,171,202,1,9,0,0,16,6)\n  let arr = new ArrayBuffer(4); // an Int32 takes 4 bytes in Javascript. The ctx.bytesToProcess is an Int32.\n  let view = new DataView(arr);\n  view.setUint32(0, ctx.bytesToProcess, true);\n  const len = new Uint8Array(arr);\n  const buf = new Uint8Array([0xf3,0x0f,0xab,0xca,1,ctx.patchNumber,0,0,len[0],len[1]]);\n  console.log('sending buffer', buf, \"ctx.bytesToProcess\", ctx.bytesToProcess, \"len.byteLength\", len.byteLength, \"len\", len);\n  ctx.port.send(buf);\n  return true;\n}\n\n/**\n * Send bytes to Plinky\n * @param {*} ctx - State machine context\n * @returns {*} - New state machine context\n */\nasync function sendBytes(ctx) {\n  const start = ctx.currentIteration * USB_BUFFER_SIZE;\n  const end = start + USB_BUFFER_SIZE;\n  const data = ctx.data.slice(start, end);\n  ctx.port.send(data);\n  ctx.currentIteration++;\n  ctx.processedBytes += data.byteLength;\n  return ctx;\n}\n\n/**\n * Saving state machine\n */\nexport const PatchSaveMachine = createMachine({\n  idle: state(\n    immediate('setHeader', reduce(ctx => {\n      const data = new Uint8Array(ctx.patch.buffer);\n      const currentIteration = 0;\n      return { ...ctx, processedBytes: 0, bytesToProcess: data.byteLength, data, currentIteration } \n    })),\n  ),\n  setHeader: state(\n    immediate('write', action(sendWriteRequest))\n  ),\n  getDataFromPatch: state(\n    immediate('write', reduce((ctx) => {\n      return { ...ctx };\n    }))\n  ),\n  write: state(\n    immediate('finished', guard(hasNoMoreData)),\n    immediate('getDataFromPatch', action(sendBytes)),\n  ),\n  finished: final()\n}, (ctx) => ({ ...ctx }));\n\n// ██╗      ██████╗  █████╗ ██████╗     ██████╗  █████╗ ███╗   ██╗██╗  ██╗\n// ██║     ██╔═══██╗██╔══██╗██╔══██╗    ██╔══██╗██╔══██╗████╗  ██║██║ ██╔╝\n// ██║     ██║   ██║███████║██║  ██║    ██████╔╝███████║██╔██╗ ██║█████╔╝ \n// ██║     ██║   ██║██╔══██║██║  ██║    ██╔══██╗██╔══██║██║╚██╗██║██╔═██╗ \n// ███████╗╚██████╔╝██║  ██║██████╔╝    ██████╔╝██║  ██║██║ ╚████║██║  ██╗\n// ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝     ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝\n//\n// The raw approach: just invoke loadMachine 32 times.\n// TODO: This needs fleshing out.\n//\n\n/**\n * Bank loading machine\n */\nexport const BankLoadMachine = createMachine({\n  // 1. Initial state\n  // Set the patch number to 0 and create an empty bank in this context.\n  idle: state(\n    immediate('sendHeader', reduce((ctx) => {\n      ctx.patchNumber = 0;\n      ctx.bank = [];\n      return { ...ctx };\n    })),\n  ),\n  // 2. Load state\n  // Use the PatchLoadMachine to \n  sendHeader: state(\n    immediate('getHeader', action(sendLoadRequest)),\n  ),\n  getHeader: state(\n    transition('data', 'header', guard(hasHeader)),\n  ),\n  header: state(\n    immediate('read', reduce(processHeader))\n  ),\n  read: state(\n    immediate('finished', guard(hasNoMoreData)),\n    transition('data', 'read', reduce(readBytes)),\n  ),\n  nextPatch: state(\n    //immediate('finished', guard(hasNoMorePatches)),\n    immediate('sendHeader', reduce((ctx) => {\n      ctx.patchNumber = ctx.patchNumber + 1;\n      return { ...ctx };\n    })),\n  ),\n  finished: final()\n}, (ctx) => ({ ...ctx }));\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { interpret } from 'robot3';\nimport { writable } from 'svelte/store';\n\n/**\n * Wrap an FSM in a Svelte store\n * @param {Machine} machine - Robot3 state machine\n * @param {any} initialContext - Initial context for machine\n * @returns {[Writable<any>, function, Service<any>]}\n */\nexport const MachineStore = (\n  machine,\n  initialContext\n) => {\n  const service = interpret(\n    machine,\n    _service => {\n      if(service === _service) {\n        console.log('[MachineStore] state', _service.machine.current, 'context', _service.context);\n        store.set({ state: _service.machine.current, context: _service.context });\n      }\n    },\n    initialContext,\n  );\n\n  const store = writable({\n    state: machine.current,\n    context: service.context,\n  });\n\n  const send = service.send;\n\n  return { store, send, service };\n};\n","// This is a list of the params in a Plinky patch, in this order.\n// The order is therefore important. The list is from params_new.h in the Plinky fw.\n// It is used to translate the TypedArray that we get from the device into JSON.\nexport const EParams = [\n  \"P_PWM\",\n  \"P_DRIVE\",\n  \"P_PITCH\",\n  \"P_OCT\",\n  \"P_GLIDE\",\n  \"P_INTERVAL\",\n  \"P_NOISE\",\n  \"P_MIXRESO\",\n  \"P_ROTATE\",\n  \"P_SCALE\",\n  \"P_MICROTUNE\",\n  \"P_STRIDE\",\n  \"P_SENS\",\n  \"P_A\",\n  \"P_D\",\n  \"P_S\",\n  \"P_R\",\n  \"P_ENV1_UNUSED\",\n  \"P_ENV_LEVEL1\",\n  \"P_A2\",\n  \"P_D2\",\n  \"P_S2\",\n  \"P_R2\",\n  \"P_ENV2_UNUSED\",\n  \"P_DLSEND\",\n  \"P_DLTIME\",\n  \"P_DLRATIO\",\n  \"P_DLWOB\",\n  \"P_DLFB\",\n  \"P_TEMPO\",\n  \"P_RVSEND\",\n  \"P_RVTIME\",\n  \"P_RVSHIM\",\n  \"P_RVWOB\",\n  \"P_RVUNUSED\",\n  \"P_SWING\",\n  \"P_ARPONOFF\",\n  \"P_ARPMODE\",\n  \"P_ARPDIV\",\n  \"P_ARPPROB\",\n  \"P_ARPLEN\",\n  \"P_ARPOCT\",\n  \"P_LATCHONOFF\",\n  \"P_SEQMODE\",\n  \"P_SEQDIV\",\n  \"P_SEQPROB\",\n  \"P_SEQLEN\",\n  \"P_GATE_LENGTH\",\n  \"P_SMP_POS\",\n  \"P_SMP_GRAINSIZE\",\n  \"P_SMP_RATE\",\n  \"P_SMP_TIME\",\n  \"P_SAMPLE\",\n  \"P_SEQPAT\",\n  \"P_JIT_POS\",\n  \"P_JIT_GRAINSIZE\",\n  \"P_JIT_RATE\",\n  \"P_JIT_PULSE\",\n  \"P_JIT_UNUSED\",\n  \"P_SEQSTEP\",\n  \"P_ASCALE\",\n  \"P_AOFFSET\",\n  \"P_ADEPTH\",\n  \"P_AFREQ\",\n  \"P_ASHAPE\",\n  \"P_AWARP\",\n  \"P_BSCALE\",\n  \"P_BOFFSET\",\n  \"P_BDEPTH\",\n  \"P_BFREQ\",\n  \"P_BSHAPE\",\n  \"P_BWARP\",\n  \"P_XSCALE\",\n  \"P_XOFFSET\",\n  \"P_XDEPTH\",\n  \"P_XFREQ\",\n  \"P_XSHAPE\",\n  \"P_XWARP\",\n  \"P_YSCALE\",\n  \"P_YOFFSET\",\n  \"P_YDEPTH\",\n  \"P_YFREQ\",\n  \"P_YSHAPE\",\n  \"P_YWARP\",\n  \"P_MIXSYNTH\",\n  \"P_MIXWETDRY\",\n  \"P_MIXHPF\",\n  \"P_MIX_UNUSED\",\n  \"P_CV_QUANT\",\n  \"P_HEADPHONE\",\n  \"P_MIXINPUT\",\n  \"P_MIXINWETDRY\",\n  \"P_SYS_UNUSED1\",\n  \"P_SYS_UNUSED2\",\n  \"P_SYS_UNUSED3\",\n  \"P_ACCEL_SENS\",\n];\n\nexport const PatchCategories = [\n  \"\",\n  \"Bass\",\n  \"Leads\",\n  \"Pads\",\n  \"Arps\",\n  \"Plinks\",\n  \"Plonks\",\n  \"Beeps\",\n  \"Boops\",\n  \"SFX\",\n  \"Line-In\",\n  \"Sampler\",\n  \"Donk\",\n  \"Jolly\",\n  \"Sadness\",\n  \"Wild\",\n  \"Gnarly\",\n  \"Weird\",\n];\n\nexport const PlinkyParams = [\n  {\n    \"id\": \"P_PWM\",\n    \"min\": -100,\n    \"max\": 100,\n    \"type\": \"int16\",\n    \"offset\": 0,\n    \"cc\": 13,\n    \"name\": \"Shape\",\n    \"description\": \"Controls the shape of the oscillators in Plinky. When exactly 0%, you get 4 sawtooths per voice. When positive, you blend smoothly through 16 ROM wavetable shapes, (2 per voice,) provided by @miunau. When negative, you get PWM control of pulse/square shapes, (also 2 per voice.) CV and internal modulation only work either positive or negative: you can blend through the wavetables when the parameter is over 0, or you can modulate pulse/square waves when the value is negative. You cant cross through zero. Plinky pans each set of oscillators, (and the sample grains) a little giving the sound a rich stereo field. With the 4 saws at position 0, we have 2 oscilators panned left and 2 panned right. With the wavetable and pulse oscilators 1 is panned left and 1 is panned right.\"\n  },\n  {\n    \"id\": \"P_DRIVE\",\n    \"min\": -1024,\n    \"max\": 1024,\n    \"cc\": 4,\n    \"name\":\"Distortion\",\n    \"description\": \"Drive/Saturation. When turned up high, the saturation unit will create guitar-like tones, especially when playing polyphonically. It can also be used to compensate for changes in volume, for example if the Sensitivity parameter is low.\"\n  },\n  {\n    \"id\": \"P_PITCH\",\n    \"min\": -1024,\n    \"max\": 1024,\n    \"cc\": 9,\n    \"name\": \"Pitch\",\n    \"description\": \"Use this to (fine) tune plinky. Range is 1 octave up or down, unquantized.\"\n  },\n  {\n    \"id\": \"P_OCT\",\n    \"min\": -1024,\n    \"max\": 1024,\n    \"cc\": -1,\n    \"name\": \"Octave\",\n    \"description\": \"Use this to quickly change pitch, quantised to octaves.\"\n  },\n  {\n    \"id\": \"P_GLIDE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 5,\n    \"name\": \"Glide\",\n    \"description\": \"Controls the speed of the portamento between notes in a single voice. Higher = slower\"\n  },\n  {\n    \"id\": \"P_INTERVAL\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 14,\n    \"name\": \"Interval\",\n    \"description\": \"Each voice has several oscillators, and this sets a fixed interval between them, from +1 to -1 octaves.\"\n  },\n  {\n    \"id\": \"P_NOISE\",\n    \"min\": -127,\n    \"max\": 127,\n    \"cc\": 2,\n    \"name\": \"Noise\",\n    \"description\": \"Each voice can add a variable amount of white noise to the oscillator, before the low-pass gate.\"\n  },\n  {\n    \"id\": \"P_MIXRESO\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 71,\n    \"name\": \"Resonance\",\n    \"description\": \"Each voice has a 2-pole lowpass gate controlled by your finger pressure and the Sensitivity control. This parameter adds resonance to the filter. Note that at high levels of resonance, you may wish to adjust the drive or the high pass filter paramters.\"\n  },\n  {\n    \"id\": \"P_ROTATE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Degree\",\n    \"description\": \"Think of this as a quantized pitch control, that transposes plinky in such a way that all the notes stay in the same scale. In other words, it changes which degree of the scale is played, but not the root of the scale itself.\"\n  },\n  {\n    \"id\": \"P_SCALE\",\n    \"min\": 0,\n    \"max\": 26,\n    \"cc\": -1,\n    \"name\": \"Scale\",\n    \"enum_id\": [\n        \"S_MAJOR\",\t\t\t\n        \"S_MINOR\",\t\t\t\n        \"S_HARMMINOR\",\t\t\n        \"S_PENTA\",\t\t\t\n        \"S_PENTAMINOR\",\t\t\n        \"S_HIRAJOSHI\",\t\t\n        \"S_INSEN\",\t\t\t\n        \"S_IWATO\",\t\t\t\n        \"S_MINYO\",\t\t\t\n        \"S_FIFTHS\",\t\t\t\n        \"S_TRIADMAJOR\",\t\t\n        \"S_TRIADMINOR\",\t\t\n        \"S_DORIAN\",\t\t\n        \"S_PHYRGIAN\",\t\t\n        \"S_LYDIAN\",\t\t\t\n        \"S_MIXOLYDIAN\",\t\t\n        \"S_AEOLIAN\",\t\t\n        \"S_LOCRIAN\",\t\t\t\n        \"S_BLUESMINOR\",\t\t\n        \"S_BLUESMAJOR\",\t\t\n        \"S_ROMANIAN\",\t\t\n        \"S_WHOLETONE\",\t\t\n        \"S_HARMONICS\",\n        \"S_HEXANY\", \n        \"S_JUST\",\n        \"S_CHROMATIC\",\n        \"S_LAST\"\n    ],\n    \"enum_name\": [\n        \"Major\",\n        \"Minor\",\n        \"Harminoc Min\",\n        \"Penta Maj\",\n        \"Penta Min\",\n        \"Hirajoshi\",\n        \"Insen\",\n        \"Iwato\",\n        \"Minyo\",\n        \"Fifths\",\n        \"Triad Maj\",\n        \"Triad Min\",\n        \"Dorian\",\n        \"Phrygian\",\n        \"Lydian\",\n        \"Mixolydian\",\n        \"Aeolian\",\n        \"Locrian\",\n        \"Blues Min\",\n        \"Blues Maj\",\n        \"Romanian\",\n        \"Wholetone\",\n        \"Harmonics\",\n        \"Hexany\",\n        \"Just\",\n        \"Chromatic\"\n    ],\n    \"description\": \"Selects which scale of notes plinky uses\"\n  },\n  {\n    \"id\": \"P_MICROTUNE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Microtune\",\n    \"description\": \"Controls how much vertical movement of your finger detunes the note. This also thickens the sound through 'unison' detuning of the individual oscillators in each note, so values above 0 are recommended.\"\n  },\n  {\n    \"id\": \"P_STRIDE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Stride\",\n    \"description\": \"Controls the interval, in semitones, between each column of plinky. It defaults to 7 semitones, a perfect fifth, like a Cello or Violin. The notes are always snapped to the chosen scale, even if the stride calls for chromatic notes, so plinky does its best to choose column pitches that follow this stride while staying in-scale.\"\n  },\n  {\n    \"id\": \"P_SENS\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.5,\n    \"cc\": 3,\n    \"name\": \"Sensitivity\",\n    \"description\": \"Master sensitivty, controlling the mapping of finger pressure to the opening/closing of each voice's low-pass gate. If you are looking for a lowpass cutoff frequency, this is the parameter you want.\"\n  },\n  {\n    \"id\": \"P_A\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 73,\n    \"name\": \"Attack\",\n    \"description\": \"Attack time for the main envelope that controls the lowpass gate. The peak level is set by the pressure of your finger, modulated by the Sensitivity parameter.\"\n  },\n  {\n    \"id\": \"P_D\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 75,\n    \"name\": \"Decay\",\n    \"description\": \"Decay time for the main envelope that controls the lowpass gate.\"\n  },\n  {\n    \"id\": \"P_S\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 74,\n    \"name\": \"Sustain\",\n    \"description\": \"Sustain level for the main envelope that controls the lowpass gate.\"\n  },\n  {\n    \"id\": \"P_R\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 72,\n    \"name\": \"Release\",\n    \"description\": \"Release time for the main envelope that controls the lowpass gate.\"\n  },\n  {\n    \"id\": \"P_ENV_LEVEL1\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Envelope 1 level\",\n    \"description\": \"Envelope 1 level\"\n  },\n  {\n    \"id\": \"P_ENV_LEVEL\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 19,\n    \"name\": \"Env 2 Level\",\n    \"description\": \"Sets the peak level of the second envelope, which can be used as a modulation source.\"\n  },\n  {\n    \"id\": \"P_A2\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 20,\n    \"name\": \"Attack 2\",\n    \"description\": \"Attack time of the second envelope, which can be used as a modulation source.\"\n  },\n  {\n    \"id\": \"P_D2\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 21,\n    \"name\": \"Decay 2\",\n    \"description\": \"Decay time of the second envelope, which can be used as a modulation source.\"\n  },\n  {\n    \"id\": \"P_S2\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 22,\n    \"name\": \"Sustain 2\",\n    \"description\": \"Sustain level of the second envelope, which can be used as a modulation source.\"\n  },\n  {\n    \"id\": \"P_R2\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 23,\n    \"name\": \"Release 2\",\n    \"description\": \"Release time of the second envelope, which can be used as a modulation source.\"\n  },\n  {\n    \"id\": \"P_ENV2_UNUSED\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_DLSEND\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0,\n    \"cc\": 94,\n    \"name\": \"Delay Send\",\n    \"description\": \"Amount of the dry sound sent to the delay unit. Turn it up for echos!\"\n  },\n  {\n    \"id\": \"P_DLTIME\",\n    \"min\": -1,\n    \"max\": 1,\n    \"default\": 0.375,\n    \"cc\": 12,\n    \"name\": \"Delay Time\",\n    \"description\": \"The time between each echo. Positive values are un-quantized; negative values are multiples of the current tempo.\"\n  },\n  {\n    \"id\": \"P_DLRATIO\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 1,\n    \"cc\": -1,\n    \"name\": \"Delay Ratio\",\n    \"description\": \"The delay unit is stereo. This moves the right tap to an earlier time, causing ping-pong poly-rhthmic repeats. Try simple ratios like 33%, 50%, 75%.\"\n  },\n  {\n    \"id\": \"P_DLWOB\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.25,\n    \"name\": \"Delay Wobble\",\n    \"cc\": -1,\n    \"description\": \"Amount of simulated tape speed wobble, causing pitch distortions in the delay.\"\n  },\n  {\n    \"id\": \"P_DLFB\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.5,\n    \"name\": \"Delay Feedback\",\n    \"cc\": 95,\n    \"description\": \"Amount of feedback - the volume of each echo reduces by this amount.\"\n  },\n  {\n    \"id\": \"P_TEMPO\",\n    \"min\": -1,\n    \"max\": 1,\n    \"name\": \"BPM\",\n    \"remap\": \"120*Math.pow(2,x)\",\n    \"default\": 0,\n    \"cc\": -1,\n    \"description\": \"Tempo in BPM. You can also tap this parameter pad rhythmically to set the tempo.\"\n  },\n  {\n    \"id\": \"P_RVSEND\",\n    \"min\": 0,\n    \"max\": 1,\n    \"name\": \"Reverb Send\",\n    \"default\": 0.25,\n    \"cc\": 91,\n    \"description\": \"Amount of the dry sound sent to the reverb unit. Turn it up for reverb!\"\n  },\n  {\n    \"id\": \"P_RVTIME\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.5,\n    \"name\": \"Reverb Time\",\n    \"cc\": 92,\n    \"description\": \"Reverb time. controls the length of the decay of the reverb.\"\n  },\n  {\n    \"id\": \"P_RVSHIM\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.25,\n    \"name\": \"Shimmer\",\n    \"cc\": 93,\n    \"description\": \"Amount of octave-up signal that is fed into the reverb, causing a shimmer effect.\"\n  },\n  {\n    \"id\": \"P_RVWOB\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 0.25,\n    \"name\": \"Reverb Wobble\",\n    \"cc\": -1,\n    \"description\": \"Amount of simulated tape speed wobble, causing pitch distortions in the reverb. Avoids metallic artefacts.\"\n  },\n  {\n    \"id\": \"P_RVUNUSED\",\n    \"min\": 0,\n    \"max\": 1,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_SWING\",\n    \"min\": 0,\n    \"max\": 1,\n    \"cc\": -1,\n    \"name\": \"Swing\",\n    \"description\": \"OUT OF ORDER. This parameter will be used to add swing in a future firmware update\"\n  },\n  {\n    \"id\": \"P_ARPONOFF\",\n    \"min\": 0,\n    \"max\": 1,\n    \"cc\": 102,\n    \"default\": 0,\n    \"name\": \"Arp on/off\",\n    \"description\": \"Switches the arpeggiator on and off.\"\n  },\n  {\n    \"id\": \"P_ARPMODE\",\n    \"cc\": 103,\n    \"default\": 0,\n    \"min\": 0,\n    \"max\": 15,\n    \"name\": \"Arpeggiator Mode\",\n    \"enum_id\": [\n      \"ARP_UP\",\n      \"ARP_DOWN\",\n      \"ARP_UPDOWN\",\n      \"ARP_UPDOWNREP\",\n      \"ARP_PEDALUP\",\n      \"ARP_PEDALDOWN\",\n      \"ARP_PEDALUPDOWN\",\n      \"ARP_RANDOM\",\n      \"ARP_RANDOM2\",\n      \"ARP_ALL\",\n      \"ARP_UP8\",\n      \"ARP_DOWN8\",\n      \"ARP_UPDOWN8\",\n      \"ARP_RANDOM8\",\n      \"ARP_RANDOM28\",\n      \"ARP_LAST\"\n    ],\n    \"enum_name\": [\n      \"Up\",\n      \"Down\",\n      \"Up then Down\",\n      \"Up then Down (repeat end notes)\",\n      \"Up with lowest note pedal\",\n      \"Down with lowest note pedal\",\n      \"Up then down with lowest note pedal\",\n      \"Random\",\n      \"Random playing 2 notes at a time\",\n      \"Repeat all notes (polyphonic)\",\n      \"Up (all 8 columns)\",\n      \"Down (all 8 columns)\",\n      \"Up then Down (all 8 columns)\",\n      \"Random (all 8 columns)\",\n      \"Random, 2 notes at a time (all 8 columns)\"\n    ],\n    \"description\": \"Arpeggiator mode. The '8 column' modes include every column, even those without a note, introducing rests into the arpeggio.\"\n  },\n  {\n    \"id\": \"P_ARPDIV\",\n    \"min\": -1,\n    \"max\": 22,\n    \"default\": 0.09090909,\n    \"name\": \"Arp Clock Divide\",\n    \"enum_id\": [\n      \"1\",\"2\", \"3\",\"4\",\"5\", \"6\",\"8\",\"10\", \"12\",\"16\",\"20\", \"24\",\"32\",\"40\", \"48\",\"64\",\"80\", \"96\",\"128\",\"160\", \"192\", \"256\" \n    ],\n    \"enum_name\": [\n      \"1/32\",\"2/32\", \"3/32\",\"4/32\",\"5/32\", \"6/32\",\"8/32\",\"10/32\", \"12/32\",\"16/32\",\"20/32\", \"24/32\",\"32/32\",\"40/32\", \"48/32\",\"64/32\",\"80/32\", \"96/32\",\"128/32\",\"160/32\", \"192/32\", \"256/32\" \n    ],\n    \"cc\": -1,\n    \"description\": \"Sets the speed of the arpeggiator. Negative numbers are un-quantized, positive numbers divide a 32nd note clock.\"\n  },\n  {\n    \"id\": \"P_ARPPROB\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 1,\n    \"cc\": -1,\n    \"name\": \"Arp Probability / Density\",\n    \"description\": \"Sets the probability of the apreggiator progressing on each tick of its clock. If the Arp Length parameter is 0, this is a true random probability, otherwise it's the density of a Euclidean rhythm.\"\n  },\n  {\n    \"id\": \"P_ARPLEN\",\n    \"min\": -17,\n    \"max\": 17,\n    \"default\": 8,\n    \"cc\": -1,\n    \"name\": \"Arp Pattern Length\",\n    \"description\": \"When non zero, this sets the length of the euclidean pattern used by the arp. Use the Arp probability parameter to change how many note are included in each pattern. Negative values treat rests differently, try both.\"\n  },\n  {\n    \"id\": \"P_ARPOCT\",\n    \"min\": 0,\n    \"max\": 4,\n    \"default\": 0,\n    \"cc\": -1,\n    \"name\": \"Arp Octaves\",\n    \"description\": \"Sets how many octaves the arpeggiator ranges over.\"\n  },\n  {\n    \"id\": \"P_LATCHONOFF\",\n    \"min\": 0,\n    \"max\": 1,\n    \"name\": \"Latch on/off\",\n    \"cc\": -1,\n    \"description\": \"Switches the latch on/off. When on, played notes will sustain even when you take your fingers off plinky. Useful for chords, arps, drones, or using plinky as an oscillator voice.\"\n  },\n  {\n    \"id\": \"P_SEQMODE\",\n    \"min\": 0,\n    \"max\": 6,\n    \"name\": \"Sequencer Mode\",\n    \"default\": 0,\n    \"enum_id\": [\n      \"SEQ_PAUSE\",\n      \"SEQ_FWD\",\n      \"SEQ_BACK\",\n      \"SEQ_PINGPONG\",\n      \"SEQ_PINGPONGREP\",\n      \"SEQ_RANDOM\",\n      \"SEQ_LAST\"    \n    ],\n    \"enum_name\": [\n      \"Pause\",\n      \"Forwards\",\n      \"Backwards\",\n      \"Pingpong\",\n      \"Pingpong (repeat end notes)\",\n      \"Random\"\n    ],\n    \"cc\": -1,\n    \"description\": \"Sets the order that notes are played by the sequencer.\"\n  },\n  {\n    \"id\": \"P_SEQDIV\",\n    \"min\": 0,\n    \"max\": 22,\n    \"default\": 0.27272727,\n    \"name\": \"Seq Clock Divide\",\n    \"enum_id\": [\n      \"1\",\"2\", \"3\",\"4\",\"5\", \"6\",\"8\",\"10\", \"12\",\"16\",\"20\", \"24\",\"32\",\"40\", \"48\",\"64\",\"80\", \"96\",\"128\",\"160\", \"192\", \"256\" \n    ],\n    \"enum_name\": [\n      \"1/32\",\"2/32\", \"3/32\",\"4/32\",\"5/32\", \"6/32\",\"8/32\",\"10/32\", \"12/32\",\"16/32\",\"20/32\", \"24/32\",\"32/32\",\"40/32\", \"48/32\",\"64/32\",\"80/32\", \"96/32\",\"128/32\",\"160/32\", \"192/32\", \"256/32\" \n    ],\n    \"cc\": -1,\n    \"description\": \"Sets the speed of the sequencer. Negative numbers are un-quantized, positive numbers divide a 32nd note clock.\"\n  },\n  {\n    \"id\": \"P_SEQPROB\",\n    \"min\": 0,\n    \"max\": 1,\n    \"default\": 1,\n    \"cc\": -1,\n    \"name\": \"Seq Probability / Density\",\n    \"description\": \"Sets the probability of the sequencer progressing on each tick of its clock. If the Arp Length parameter is 0, this is a true random probability, otherwise it's the density of a Euclidean rhythm.\"\n  },\n  {\n    \"id\": \"P_SEQLEN\",\n    \"min\": -17,\n    \"max\": 17,\n    \"default\": 8,\n    \"cc\": -1,\n    \"name\": \"Seq Pattern Length\",\n    \"description\": \"When non zero, this sets the length of the euclidean pattern used by the sequencer. Use the Seq Probability parameter to change how many note are included in each pattern. Negative values treat rests differently, try both.\"\n  },\n  {\n    \"id\": \"P_GATE_LENGTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 11,\n    \"name\": \"Gate length\",\n    \"description\": \"Sets the length of the gate of each step. The gate is the signal that determines whether a note is on or off. Longer gates means notes are played longer, which (in tandem with Envelope 1) determines how long notes are sustained.\"\n  },\n  {\n    \"id\": \"P_SMP_POS\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 15,\n    \"name\": \"Sample position\",\n    \"description\": \"Controls the starting point of the sample playback, relative to the slice point. If you modulate this parameter you get dynamic slicing.\"\n  },\n  {\n    \"id\": \"P_SMP_GRAINSIZE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 16,\n    \"name\": \"Grain size\",\n    \"description\": \"Sets the size of the grains. Modulate to achieve granular sound effects.\"\n  },\n  {\n    \"id\": \"P_SMP_RATE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 17,\n    \"name\": \"Sample playback rate\",\n    \"description\": \"Determines at what relative speed the sample is played back, eg. 50% slows the sample down by a factor of 2, 200% speeds up the sample twice. Playback speed affects the pitch of the sample accordingly, slowing the sample down pitches it down, speeding up also pitches up.\"\n  },\n  {\n    \"id\": \"P_SMP_TIME\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 18,\n    \"name\": \"Sample playback time\",\n    \"description\": \"Determines at what relative speed the sample is played back, but without changing the pitch. As the sample is cut up in miniscule ‘grains’ of audio (milliseconds), Plinky repeats some of these grains to slow down, and leaves some grains out to speed up. Changes in grain size have more drastic effects when samples are stretched severely. \"\n  },\n  {\n    \"id\": \"P_SAMPLE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 82,\n    \"name\": \"Sample #\",\n    \"description\": \"Controls which sample is being played, allowing you to change samples from within a preset by assigning a LFO or CV source to this parameter.\"\n  },\n  {\n    \"id\": \"P_SEQPAT\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 83,\n    \"enum_id\": [\n      \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\n    ],\n    \"enum_name\": [\n      \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\n    ],\n    \"name\": \"Sequencer pattern #\",\n    \"description\": \"Controls which sequencer pattern is being played back, allowing you to change patterns from within a preset by assigning an LFO or CV source to this parameter. If you add a slow rising saw to this parameter you can chain various patterns together. \"\n  },\n  {\n    \"id\": \"P_JIT_POS\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Sample position jitter\",\n    \"description\": \"Adds an amount of randomness to the sample playback position.\"\n  },\n  {\n    \"id\": \"P_JIT_GRAINSIZE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Grain size jitter\",\n    \"description\": \"Adds an amount of randomness to the sample grain size.\"\n  },\n  {\n    \"id\": \"P_JIT_RATE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Sample speed jitter\",\n    \"description\": \"Adds an amount of randomness to the sample playback speed.\"\n  },\n  {\n    \"id\": \"P_JIT_PULSE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_JIT_UNUSED\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_SEQSTEP\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 85,\n    \"name\": \"Pattern offset\",\n    \"description\": \"Offsets the starting point of the sequencer pattern allowing for variations in sequencer playback.\"\n  },\n  {\n    \"id\": \"P_ASCALE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"A scale\",\n    \"description\": \"An attenuator for the signal coming from the corresponding CV input jacks.\"\n  },\n  {\n    \"id\": \"P_AOFFSET\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 24,\n    \"name\": \"A offset\",\n    \"description\": \"Offsets the CV and/or LFO. This is a constant voltage that is being added (or subtracted) from the sum of the CV input and the LFO.\"\n  },\n  {\n    \"id\": \"P_ADEPTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 25,\n    \"name\": \"A depth\",\n    \"description\": \"Attenuator for the internal LFO's.The default value is zero so turn this up for LFO's.\"\n  },\n  {\n    \"id\": \"P_AFREQ\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 26,\n    \"name\": \"A rate\",\n    \"description\": \"Controls the rate of the internal LFO. The LFO rates can range from 20 sceonds (at +100%) to milliseconds at -100%.\"\n  },\n  {\n    \"id\": \"P_ASHAPE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"A shape\",\n    \"description\": \"Sets the shape of the LFO. The following shapes are available; Triangle, Sine, SmthRnd (Smooth Random), StepRnd (Stepped Random), BiSquare (Bipolar Square wave), Square (Unipolar Square wave), Castle (looks like a sandcastle), BiTrigs (Bipolar Trigger pulses), Trigs (Unipolar Trigger Pulses), Env.\"\n  },\n  {\n    \"id\": \"P_AWARP\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"A warp\",\n    \"description\": \"Sets the slope of the LFO shape - for example turning a triangle wave into a sharp ramp up (symmetry +100) or down (symmetry -100). \"\n  },\n  {\n    \"id\": \"P_BSCALE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"B scale\",\n    \"description\": \"An attenuator for the signal coming from the corresponding CV input jacks.\"\n  },\n  {\n    \"id\": \"P_BOFFSET\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 27,\n    \"name\": \"B offset\",\n    \"description\": \"Offsets the CV and/or LFO. This is a constant voltage that is being added (or subtracted) from the sum of the CV input and the LFO.\"\n  },\n  {\n    \"id\": \"P_BDEPTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 28,\n    \"name\": \"B depth\",\n    \"description\": \"Attenuator for the internal LFO's.The default value is zero so turn this up for LFO's.\"\n  },\n  {\n    \"id\": \"P_BFREQ\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 29,\n    \"name\": \"B rate\",\n    \"description\": \"Controls the rate of the internal LFO. The LFO rates can range from 20 sceonds (at +100%) to milliseconds at -100%.\"\n  },\n  {\n    \"id\": \"P_BSHAPE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"B shape\",\n    \"description\": \"Sets the shape of the LFO. The following shapes are available; Triangle, Sine, SmthRnd (Smooth Random), StepRnd (Stepped Random), BiSquare (Bipolar Square wave), Square (Unipolar Square wave), Castle (looks like a sandcastle), BiTrigs (Bipolar Trigger pulses), Trigs (Unipolar Trigger Pulses), Env.\"\n  },\n  {\n    \"id\": \"P_BWARP\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"B warp\",\n    \"description\": \"Sets the slope of the LFO shape - for example turning a triangle wave into a sharp ramp up (symmetry +100) or down (symmetry -100). \"\n  },\n  {\n    \"id\": \"P_XSCALE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"X scale\",\n    \"description\": \"An attenuator for the signal coming from the corresponding CV input jacks.\"\n  },\n  {\n    \"id\": \"P_XOFFSET\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 78,\n    \"name\": \"X offset\",\n    \"description\": \"Offsets the CV and/or LFO. This is a constant voltage that is being added (or subtracted) from the sum of the CV input and the LFO.\"\n  },\n  {\n    \"id\": \"P_XDEPTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 77,\n    \"name\": \"X depth\",\n    \"description\": \"Attenuator for the internal LFO's.The default value is zero so turn this up for LFO's.\"\n  },\n  {\n    \"id\": \"P_XFREQ\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 76,\n    \"name\": \"X rate\",\n    \"description\": \"Controls the rate of the internal LFO. The LFO rates can range from 20 sceonds (at +100%) to milliseconds at -100%.\"\n  },\n  {\n    \"id\": \"P_XSHAPE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"X shape\",\n    \"description\": \"Sets the shape of the LFO. The following shapes are available; Triangle, Sine, SmthRnd (Smooth Random), StepRnd (Stepped Random), BiSquare (Bipolar Square wave), Square (Unipolar Square wave), Castle (looks like a sandcastle), BiTrigs (Bipolar Trigger pulses), Trigs (Unipolar Trigger Pulses), Env.\"\n  },\n  {\n    \"id\": \"P_XWARP\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"X warp\",\n    \"description\": \"Sets the slope of the LFO shape - for example turning a triangle wave into a sharp ramp up (symmetry +100) or down (symmetry -100). \"\n  },\n  {\n    \"id\": \"P_YSCALE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Y scale\",\n    \"description\": \"An attenuator for the signal coming from the corresponding CV input jacks.\"\n  },\n  {\n    \"id\": \"P_YOFFSET\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 81,\n    \"name\": \"Y offset\",\n    \"description\": \"Offsets the CV and/or LFO. This is a constant voltage that is being added (or subtracted) from the sum of the CV input and the LFO.\"\n  },\n  {\n    \"id\": \"P_YDEPTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 80,\n    \"name\": \"Y depth\",\n    \"description\": \"Attenuator for the internal LFO's.The default value is zero so turn this up for LFO's.\"\n  },\n  {\n    \"id\": \"P_YFREQ\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 79,\n    \"name\": \"Y rate\",\n    \"description\": \"Controls the rate of the internal LFO. The LFO rates can range from 20 sceonds (at +100%) to milliseconds at -100%.\"\n  },\n  {\n    \"id\": \"P_YSHAPE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Y shape\",\n    \"description\": \"Sets the shape of the LFO. The following shapes are available; Triangle, Sine, SmthRnd (Smooth Random), StepRnd (Stepped Random), BiSquare (Bipolar Square wave), Square (Unipolar Square wave), Castle (looks like a sandcastle), BiTrigs (Bipolar Trigger pulses), Trigs (Unipolar Trigger Pulses), Env.\"\n  },\n  {\n    \"id\": \"P_YWARP\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Y warp\",\n    \"description\": \"Sets the slope of the LFO shape - for example turning a triangle wave into a sharp ramp up (symmetry +100) or down (symmetry -100). \"\n  },\n  {\n    \"id\": \"P_MIXSYNTH\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 7,\n    \"name\": \"Synth level\",\n    \"description\": \"Sets the gain level of Plinky's synth / sampler. Above 50% you will start hitting a limiter, which can help to glue patches with wide dynamic range together. You can use this as a volume control if you are taking audio from the left / mono output.\"\n  },\n  {\n    \"id\": \"P_MIXWETDRY\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 8,\n    \"name\": \"Synth wet/dry\",\n    \"description\": \"Sets the balance between the dry signal of Plinky's voice (synth or sampler) and the wet signal of the Reverb and Delay units (the distortion/saturation device is applied directly to the 8 individual voices.) The default setting is zero where there is an equal mix of wet and dry signals. 100 is completely wet and -100 is completely dry.\"\n  },\n  {\n    \"id\": \"P_MIXHPF\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 21,\n    \"name\": \"HPF\",\n    \"description\": \"After the synth/sampler, external audio and the effects are mixed, they pass through a High Pass Filter. This parameter controls the cut off frequency.\"\n  },\n  {\n    \"id\": \"P_MIX_UNUSED\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_CV_QUANT\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Pitch quantisation\",\n    \"description\": \"Plinky’s pitch input is most useful when you have a sequence or latched note playing; the pitch is transposed according to the pitch CV input (1 volt per octave), and you can use this last parameter to choose if the transposition is unquantized, quantized to semitones, or transposed in-scale. 0v (C0) means no transposition.\"\n  },\n  {\n    \"id\": \"P_HEADPHONE\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Headphone level\",\n    \"description\": \"Sets the level of the final output stage for the headphone out. Turn this up to 11.\"\n  },\n  {\n    \"id\": \"P_MIXINPUT\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 89,\n    \"name\": \"Input level\",\n    \"description\": \"Sets the gain level of Plinky's inputs. These inputs take line level signals and amplify them to Eurorack levels, but... If you feed it eurorack level, the analog saturation unit in Plinky V2 does it's thing. In case both the inputs on the face plate and the front/back side are used, Plinky mixes the inputs at fixed levels.\"\n  },\n  {\n    \"id\": \"P_MIXINWETDRY\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": 90,\n    \"name\": \"Input wet/dry\",\n    \"description\": \"Sets the balance between the dry signal of the audio inputs and the wet signal passing through the Reverb and Delay units.\"\n  },\n  {\n    \"id\": \"P_ACCEL_SENS\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"name\": \"Accelerometer sensitivity\",\n    \"description\": \"Sets the sensitivity of the accelerometer. Changes in orientation will send to the X & Y parameters. Turn this up to wiggle X & Y by moving your Plinky around in space.\"\n  },\n  {\n    \"id\": \"P_SYS_UNUSED1\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_SYS_UNUSED2\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_SYS_UNUSED3\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  },\n  {\n    \"id\": \"P_SYS_UNUSED4\",\n    \"min\": 0,\n    \"max\": 127,\n    \"cc\": -1,\n    \"description\": \"unused parameter slot\"\n  }\n];\n","export function normalise(x) {\n  return x / 1024 * 100 \n}\n\nexport function denormalise(x) {\n  return x / 100 * 1024\n}\n\nfunction round(num) {\n  return Math.round( num * 10 + Number.EPSILON ) / 10;\n}\n\nexport function formatValue(v) {\n  return round(normalise(v))\n}","export const paramIconMap = {\n  \"P_PWM\": \"shape.svg\",\n  \"P_DRIVE\": \"distortion--resonance.svg\",\n  \"P_PITCH\": \"pitch.svg\",\n  \"P_OCT\": \"octave--scale.svg\",\n  \"P_GLIDE\": \"glide--microtone.svg\",\n  \"P_INTERVAL\": \"osc-interval--column.svg\",\n  \"P_NOISE\": \"noise.svg\",\n  \"P_MIXRESO\": \"distortion--resonance.svg\",\n  \"P_ROTATE\": \"degree.svg\",\n  \"P_SCALE\": \"octave--scale.svg\",\n  \"P_MICROTUNE\": \"glide--microtone.svg\",\n  \"P_STRIDE\": \"osc-interval--column.svg\",\n  \"P_SENS\": \"sensitivity--env-2-level.svg\",\n  \"P_A\": \"attack.svg\",\n  \"P_D\": \"decay.svg\",\n  \"P_S\": \"sustain.svg\",\n  \"P_R\": \"release.svg\",\n  \"P_ENV1_UNUSED\": \"blank.svg\",\n  \"P_ENV_LEVEL1\": \"sensitivity--env-2-level.svg\",\n  \"P_A2\": \"attack.svg\",\n  \"P_D2\": \"decay.svg\",\n  \"P_S2\": \"sustain.svg\",\n  \"P_R2\": \"release.svg\",\n  \"P_ENV2_UNUSED\": \"blank.svg\",\n  \"P_DLSEND\": \"delay--reverb.svg\",\n  \"P_DLTIME\": \"time.svg\",\n  \"P_DLRATIO\": \"pingpong--shimmer.svg\",\n  \"P_DLWOB\": \"wobble.svg\",\n  \"P_DLFB\": \"feedback.svg\",\n  \"P_TEMPO\": \"tempo--swing.svg\",\n  \"P_RVSEND\": \"delay--reverb.svg\",\n  \"P_RVTIME\": \"time.svg\",\n  \"P_RVSHIM\": \"pingpong--shimmer.svg\",\n  \"P_RVWOB\": \"wobble.svg\",\n  \"P_RVUNUSED\": \"feedback.svg\",\n  \"P_SWING\": \"tempo--swing.svg\",\n  \"P_ARPONOFF\": \"arp--latch.svg\",\n  \"P_ARPMODE\": \"order.svg\",\n  \"P_ARPDIV\": \"clock-div.svg\",\n  \"P_ARPPROB\": \"chance.svg\",\n  \"P_ARPLEN\": \"euclid-len.svg\",\n  \"P_ARPOCT\": \"arp-octaves.svg\",\n  \"P_LATCHONOFF\": \"arp--latch.svg\",\n  \"P_SEQMODE\": \"order.svg\",\n  \"P_SEQDIV\": \"clock-div.svg\",\n  \"P_SEQPROB\": \"chance.svg\",\n  \"P_SEQLEN\": \"euclid-len.svg\",\n  \"P_GATE_LENGTH\": \"gate-len.svg\",\n  \"P_SMP_POS\": \"scrub--jitter.svg\",\n  \"P_SMP_GRAINSIZE\": \"grain-size--jitter.svg\",\n  \"P_SMP_RATE\": \"play-speed--jitter.svg\",\n  \"P_SMP_TIME\": \"time.svg\",\n  \"P_SAMPLE\": \"sample.svg\",\n  \"P_SEQPAT\": \"pattern--step-offset.svg\",\n  \"P_JIT_POS\": \"scrub--jitter.svg\",\n  \"P_JIT_GRAINSIZE\": \"grain-size--jitter.svg\",\n  \"P_JIT_RATE\": \"play-speed--jitter.svg\",\n  \"P_JIT_PULSE\": \"time.svg\",\n  \"P_JIT_UNUSED\": \"blank.svg\",\n  \"P_SEQSTEP\": \"pattern--step-offset.svg\",\n  \"P_ASCALE\": \"a-b-cv-level.svg\",\n  \"P_AOFFSET\": \"offset.svg\",\n  \"P_ADEPTH\": \"lfo--depth.svg\",\n  \"P_AFREQ\": \"lfo--rate.svg\",\n  \"P_ASHAPE\": \"lfo--shape.svg\",\n  \"P_AWARP\": \"lfo--symmetry.svg\",\n  \"P_BSCALE\": \"a-b-cv-level.svg\",\n  \"P_BOFFSET\": \"offset.svg\",\n  \"P_BDEPTH\": \"lfo--depth.svg\",\n  \"P_BFREQ\": \"lfo--rate.svg\",\n  \"P_BSHAPE\": \"lfo--shape.svg\",\n  \"P_BWARP\": \"lfo--symmetry.svg\",\n  \"P_XSCALE\": \"x-y-cv-level.svg\",\n  \"P_XOFFSET\": \"offset.svg\",\n  \"P_XDEPTH\": \"lfo--depth.svg\",\n  \"P_XFREQ\": \"lfo--rate.svg\",\n  \"P_XSHAPE\": \"lfo--shape.svg\",\n  \"P_XWARP\": \"lfo--symmetry.svg\",\n  \"P_YSCALE\": \"x-y-cv-level.svg\",\n  \"P_YOFFSET\": \"offset.svg\",\n  \"P_YDEPTH\": \"lfo--depth.svg\",\n  \"P_YFREQ\": \"lfo--rate.svg\",\n  \"P_YSHAPE\": \"lfo--shape.svg\",\n  \"P_YWARP\": \"lfo--symmetry.svg\",\n  \"P_MIXSYNTH\": \"synth.svg\",\n  \"P_MIXWETDRY\": \"wet-dry.svg\",\n  \"P_MIXHPF\": \"hpf.svg\",\n  \"P_MIX_UNUSED\": \"blank.svg\",\n  \"P_CV_QUANT\": \"cv-quantize.svg\",\n  \"P_HEADPHONE\": \"volume.svg\",\n  \"P_MIXINPUT\": \"input.svg\",\n  \"P_MIXINWETDRY\": \"wet-dry.svg\",\n  \"P_SYS_UNUSED1\": \"blank.svg\",\n  \"P_SYS_UNUSED2\": \"blank.svg\",\n  \"P_SYS_UNUSED3\": \"blank.svg\",\n  \"P_ACCEL_SENS\": \"cv-quantize.svg\",\n}","import { EParams, PatchCategories, PlinkyParams } from './params';\n\nimport { formatValue } from '../utils.js'\nimport { paramIconMap } from './param-icons.js'\n\nfunction getParam(id) {\n  return PlinkyParams.find(param => {\n    return param.id === id;\n  });\n}\n\n\n\nclass Param {\n\n  constructor(params) {\n    Object.assign(this, params);\n    this.mods = {\n      get env() {\n        return params.arr[1];\n      },\n      set env(val) {\n        params.arr[1] = val;\n      },\n      get pressure() {\n        return params.arr[2];\n      },\n      set pressure(val) {\n        params.arr[2] = val;\n      },\n      get a() {\n        return params.arr[3];\n      },\n      set a(val) {\n        params.arr[3] = val;\n      },\n      get b() {\n        return params.arr[4];\n      },\n      set b(val) {\n        params.arr[4] = val;\n      },\n      get x() {\n        return params.arr[5];\n      },\n      set x(val) {\n        params.arr[5] = val;\n      },\n      get y() {\n        return params.arr[6];\n      },\n      set y(val) {\n        params.arr[6] = val;\n      },\n      get random() {\n        return params.arr[7];\n      },\n      set random(val) {\n        params.arr[7] = val;\n      },\n    };\n  }\n\n  // @TODO — these could apply scale etc according to min, max, etc from \n  //         PlinkyParam\n  get value() {\n    return this.arr[0]\n  }\n  set value(val) {\n    this.arr[0] = val\n  }\n  \n  get displayValue() {\n    let activeOption = this.getActiveSelectOption();\n    if (activeOption) return activeOption.label;\n    \n    let suffix = \"%\"; // todo -- which params have me?\n    return formatValue(this.value) + suffix;\n  }\n  \n  getActiveSelectOption () {\n    let values = this.getSelectOptions()\n    if (!values) return null\n    \n    const width = 1024 / values.length\n    \n    let i = Math.floor(this.value / width)\n    if (i >= values.length) i = values.length - 1 // guard overflow in the top half of the top bucket\n    return  values[i]\n  }\n  \n  get icon () {\n    return paramIconMap[this.id]\n  }\n  \n  getSelectOptions () {\n\n    if (this.enum_name) {\n      \n      const length = this.enum_name.length\n      const values = this\n        .enum_name\n        .map(\n          (entry, i) => ({ \n            label: entry, \n            value: Math.floor(i * (1024 / length) + (1024 / length * 0.5)) \n          })\n        )\n      return values\n    } else {\n      return null\n    }\n\n  }\n\n  randomise() {\n    const skipParams = ['P_MIXINPUT', 'P_MIXINWETDRY', 'P_HEADPHONE', 'P_MIXWETDRY', 'P_MIXSYNTH'];\n    if(skipParams.includes(this.id)) {\n      return;\n    }\n    // randomise value within this.min and this.max\n    const min = this.min;\n    const max = this.max;\n    const range = max - min;\n    const randomness = Math.random() * range;\n    const value = min + randomness;\n    this.value = value < 1 ? value : parseInt(value);\n    console.log('new value', this.id, this.min, this.max, range, randomness, value, this.value);\n  }\n\n}\n\n\nexport class Patch {\n\n  constructor(patch) {\n    this.buffer = patch;\n    this.params = [];\n\n    // each parameter has 16 bytes;\n    // first 2 bytes are the value, then the 7 mod matrix amounts\n    EParams.forEach((param, index) => {\n      // We have 16 bytes that we're looking at\n      const len = 16;\n      // Index to start slicing at\n      const idx = index * len;\n      // We have 16 bytes in the ArrayBuffer that we want — create an Int16Array\n      // over those bytes\n      const arr = new Int16Array(patch, idx, len)\n      const plinkyParam = getParam(param) || { name: param, id: param };\n      this.params.push(new Param({\n        ...plinkyParam,\n        arr\n      }));\n    });\n\n    // bitfield\n    this.bitFieldUInt8 = new Uint8Array(patch, patch.byteLength - 16, 16)\n    this.bitFieldInt8 = new Int8Array(patch, patch.byteLength - 16, 16)\n  }\n\n  // @TODO — i'm not quite sure I understand what the setters for these should \n  //         look like yet\n  get arp() { return (this.bitFieldUInt8[0] & 1) > 0; }\n  get latch() { return (this.bitFieldUInt8[0] & 2) > 0; }\n  get loopStart() { return this.bitFieldInt8[1]; }\n  get loopLength() { return this.bitFieldInt8[2]; }\n  \n  get category () {\n    const categoryArray = new Uint8Array(this.buffer, 1543, 1);\n    return categoryArray[0];\n  }\n  \n  set category (i) {\n    if (i < 0) i = 0;\n    const categoryArray = new Uint8Array(this.buffer, 1543, 1);\n    categoryArray[0] = i;\n  }\n  \n  get name () {\n    const nameArray = new Uint8Array(this.buffer, 1544, 8);\n    let str = \"\";\n    nameArray.forEach(a => { \n      if (a == 0) return;\n      str += String.fromCharCode(a);\n    })\n    return str;\n  }\n  \n  set name (str) {\n    const nameArray = new Uint8Array(this.buffer, 1544, 8);\n    let i = 0;\n    while (i < 8) {\n      let charCode = str.charCodeAt(i);\n      if (isNaN(charCode)) charCode = 0;\n      nameArray[i] = charCode;\n      i++;\n    }\n  }\n\n  randomise() {\n    console.log('randomising patch');\n    this.params.forEach(param => {\n      param.randomise();\n    });\n  }\n\n  /**\n   * # Replace the entire contents of the patch's underlying buffer\n   * \n   */ \n  updateBuffer(patch) {\n    // @todo - blat `patch` over the contents of this.buffer without reassigning this.buffer. \n  }\n  \n  setData(data, byteOffset) {\n    // @todo - blat this data over the relevant bit of this.buffer\n  }\n  \n}","/**\n * WebUSB port\n */\nexport class Port extends EventTarget {\n\n  constructor(device) {\n    super();\n    this.device = device;\n    this.interfaceNumber = 0;\n    this.endpointIn = 0;\n    this.endpointOut = 0;\n    this.queue = [];\n    this.transferInflight = false\n    //this.startQueue();\n  }\n\n  onReceive(data) {}\n  onReceiveError(error) {}\n\n  setEndpoints() {\n\n    // Go through all the interfaces in this device configuration.\n    let interfaces = this.device.configuration.interfaces;\n\n    console.log(\"Interfaces\", this.device.configuration.interfaces);\n\n    interfaces.forEach(element => {\n      \n      console.log(\"Element\", element);\n\n      // Element alternates - these are the *real* elements\n      // that we want to connect to.\n      element.alternates.forEach(elementalt => {\n\n      if (elementalt.interfaceClass==0xFF) {\n\n        this.interfaceNumber = element.interfaceNumber;\n\n        // Alternates have endpoints, that we then attach to\n        // so we can communicate with the device through\n        // a shared pointer.\n        elementalt.endpoints.forEach(elementendpoint => {\n\n          if (elementendpoint.direction == \"out\") {\n            this.endpointOut = elementendpoint.endpointNumber;\n          }\n\n          if (elementendpoint.direction==\"in\") {\n            this.endpointIn = elementendpoint.endpointNumber;\n          }\n\n        });\n\n      }\n\n    })});\n\n    if(this.endpointIn === 0) { console.error('endpointIn is 0') };\n    if(this.endpointOut === 0) { console.error('endpointOut is 0') };\n\n  }\n\n  async connect() {\n\n    let readLoop = async () => {\n      try {\n        const result = await this.device.transferIn(this.endpointIn, 64)\n        this.onReceive(result.data);\n        readLoop();\n      }\n      catch(error) {\n        this.onReceiveError(error);\n      }\n    };\n\n    try {\n\n      // Open the WebUSB device connection\n      await this.device.open();\n\n      // Select the passe configuration to that device\n      // It is 1 as we are only interested in the first one.\n      // We are only connecting to one device here.\n      if (this.device.configuration === null) {\n        return this.device.selectConfiguration(1);\n      }\n\n      // Set the endpoint for that device.\n      await this.setEndpoints();\n\n      console.log(\"Interface number:\", this.interfaceNumber);\n      console.log(\"Configuration:\", this.device.configuration);\n\n      // Claim the interface to be in use by this app.\n      await this.device.claimInterface(this.interfaceNumber);\n\n      try {\n        // ??? leftover?\n        await this.device.selectAlternateInterface(this.interfaceNumber, this.endpointIn);\n      }\n      catch(err) {\n        //console.error('BOO!!! this.device.selectAlternateInterface() failed');\n      }\n\n      await this.device.controlTransferOut({\n          'requestType': 'class',\n          'recipient': 'interface',\n          'request': 0x22,\n          'value': 0x01,\n          'index': this.interfaceNumber});\n\n      // Start the read loop defined above\n      readLoop();\n      \n    }\n    catch(error) {\n      console.error(error);\n      throw error;\n    }\n\n  }\n\n  async disconnect() {\n    return this.device.controlTransferOut({\n        'requestType': 'class',\n        'recipient': 'interface',\n        'request': 0x22,\n        'value': 0x00,\n        'index': this.interfaceNumber})\n    .then(() => this.device.close());\n  };\n\n  send(data) {\n    console.log('sending', data, this.endpointOut);\n    return this.device.transferOut(this.endpointOut, data);\n  };\n  \n  queueMessage (data) {\n    if (queue.length > 5000) return console.warn('You have queued too many messages, have more chill')\n    this.queue.push(data);\n  }\n  \n  async processQueue () {\n    // bounce if there's nothing left to do\n    if (this.queue.length === 0) return;\n    // bounce if we're already sending something and it hasn't been accepted yet\n    if (this.transferInflight) return;\n    \n    this.transferInflight = true\n    \n    const data = this.queue.shift();\n    try {\n      await this.send(data)\n    } catch (e) {\n      console.error(e)\n      this.queue.unshift(data) // naive retry.\n    }\n    \n    this.transferInflight = false\n  }\n  \n  startQueue () {\n    this.stopQueue()\n    this.queueInterval = setInterval(this.processQueue.bind(this), 1);\n  }\n  \n  stopQueue () {\n    if (this.queueInterval) clearInterval(this.queueInterval)\n  }\n\n}\n","/**\n * Hardware vendor ID filters for requesting access to a device\n * Controls which devices are listed in the pop-up requesting access to one.\n */\nconst filters = [\n  { 'vendorId': 0x239A }, // Adafruit boards\n  { 'vendorId': 0xcafe }, // TinyUSB example\n];\n\n/**\n * WebUSB serial connection\n */\nexport class Serial {\n\n  constructor() {\n  }\n\n  static async getPorts(constructor) {\n    return navigator.usb.getDevices().then(devices => {\n      return devices.map(device => constructor ? new constructor(device) : new Port(device));\n    });\n  };\n\n  static async requestPort(constructor) {\n    return navigator.usb.requestDevice({ 'filters': filters }).then(\n      device => new constructor ? new constructor(device) : new Port(device)\n    );\n  }\n\n}\n","import { BankLoadMachine, PatchLoadMachine, PatchSaveMachine } from './PatchMachines';\nimport {\n  action,\n  createMachine,\n  guard,\n  immediate,\n  interpret,\n  invoke,\n  reduce,\n  state,\n  transition,\n} from 'robot3';\n\nimport { MachineStore } from './stores/MachineStore';\nimport { Patch } from './plinky/patch';\nimport { Port } from './webusb/WebUSBPort';\nimport { Serial } from './webusb/WebUSBSerial';\n\n/**\n * Class to wire up the WebUSB port responses to the Plinky state machine\n */\nclass WebUSBPlinky extends Port {\n\n  onReceive(data) {\n    console.log('Port data:', data);\n    const { service } = PlinkyMachine;\n    if(service.child) {\n      // If we're in a child state machine state, try to transition that.\n      service.child.send({\n        type: 'data',\n        data: data.buffer\n      });\n    }\n    else {\n      // Otherwise, transition the main machine.\n      // NB: this isn't really used at the moment. The patch loading/saving\n      // machines are their own child machines, and the only ones that accept\n      // data events currently.\n      service.send({\n        type: 'data',\n        data: data.buffer\n      });\n    }\n  }\n\n  onReceiveError(error) {\n    console.error('Port error:', error);\n    const { service } = PlinkyMachine;\n    if(service.child) {\n      service.child.send({\n        type: 'error',\n        data: error\n      });\n    }\n    else {\n      service.send({\n        type: 'error',\n        data: error\n      });\n    }\n\n  }\n\n}\n\n/**\n * Connect the port inside the state machine context to a WebUSB port\n * @param {*} ctx - State machine context \n * @returns {*} - New context with connected port\n */\nexport async function connect(ctx) {\n  try {\n    ctx.port = await Serial.requestPort(WebUSBPlinky);\n    await ctx.port.connect();\n    return ctx;\n  }\n  catch(err) {\n    throw err;\n  }\n}\n\nexport async function randomise(ctx) {\n  const { patch } = ctx;\n  patch.randomise();\n  return ctx;\n}\n\n/**\n * Creates a Plinky state machine backed by a context that writes\n * to a Svelte store\n * @param {*} initialContext - Initial context to provide to machine\n * @returns {MachineStore} - Plinky state machine\n */\nexport function createPlinkyMachine(initialContext = {}) {\n\n  const states = {\n    disconnected: state(\n      transition('connect', 'connecting'),\n      transition('parsePatch', 'disconnected', reduce((ctx, ev) => {\n        if(ev.patch) {\n          const patch = ev.patch;\n          const arrayBuffer = patch.buffer.slice(patch.byteOffset, patch.byteLength + patch.byteOffset);\n          const patchObject = new Patch(arrayBuffer);\n\n          window.currentPatch = patchObject // <--- grab this if you need to do some debugging\n          return { ...ctx, patch: patchObject }\n        }\n        return { ...ctx };\n      }))\n    ),\n    connecting: invoke(\n      connect,\n      transition('done', 'connected'),\n      transition('error', 'error', reduce((ctx, ev) =>\n        ({ ...ctx, error: ev.error })\n      ))\n    ),\n    connected: state(\n      transition('loadPatch', 'loadPatch', reduce((ctx, ev) =>\n        ({ ...ctx, patchNumber: ev.patchNumber })\n      )),\n      transition('savePatch', 'savePatch'),\n      transition('clearPatch', 'clearPatch'),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      })),\n      transition('randomise', 'randomise'),\n    ),\n    randomise: invoke(\n      randomise,\n      transition('done', 'connected', reduce((ctx, ev) => {\n        return ctx;\n      })),\n      transition('error', 'error', reduce((ctx, ev) =>\n        ({ ...ctx, error: ev.error })\n      ))\n    ),\n    clearPatch: state(\n      immediate('connected', reduce((ctx) => {\n        ctx.patch = null;\n        return { ...ctx }\n      }))\n    ),\n    loadPatch: invoke(\n      PatchLoadMachine,\n      transition('done', 'connected', reduce((ctx, ev) => {\n        // The result from the PatchLoadMachine is an array in ev.data.result.\n        // Concat all of them together into a new Uint8Array to get the whole patch data.\n        const patchData = Uint8Array.from(Array.prototype.concat(...ev.data.result.map(a => Array.from(a))));\n        const arrayBuffer = patchData.buffer.slice(patchData.byteOffset, patchData.byteLength + patchData.byteOffset);\n        const patch = new Patch(arrayBuffer);\n\n        window.currentPatch = patch // <--- grab this if you wanna try debugging things\n        return { ...ctx, patch };\n      })),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    savePatch: invoke(\n      PatchSaveMachine,\n      transition('done', 'connected'),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    loadBank: invoke(\n      BankLoadMachine,\n      transition('done', 'connected', reduce((ctx, ev) => {\n        const patch = Uint8Array.from(Array.prototype.concat(...ev.data.result.map(a => Array.from(a))));\n        const arrayBuffer = patch.buffer.slice(patch.byteOffset, patch.byteLength + patch.byteOffset);\n        const patchObject = new Patch(arrayBuffer);\n\n        window.currentPatch = patchObject // <--- grab this if you wanna try debugging things\n        return { ...ctx, patch: patchObject };\n      })),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    error: state(\n      transition('connect', 'connecting', reduce(ctx => {\n        ctx.error = null;\n        return { ...ctx };\n      })),\n    )\n  };\n\n  const context = (ctx) => {\n    return { ...ctx };\n  };\n\n  const machine = createMachine(states, context);\n\n  const bankSize = 32;\n  const bank = Array(bankSize).fill().map((i, index) => {\n    return {\n      number: index,\n      path: null\n    }\n  });\n\n  return MachineStore(machine, Object.assign(initialContext, {\n    port: null,\n    patch: null,\n    bank,\n    patch: null\n  }));\n}\n\n/**\n * Export a singleton of the Plinky state machine\n */\nexport const PlinkyMachine = createPlinkyMachine({\n  patchNumber: 0,\n});\n","<script>\n  import { formatValue, denormalise } from \"./lib/utils.js\"\n\n  export let param = null;\n  \n  const paramMin = -100;\n  const paramMax = 100;\n  const xMin = -1024;\n  const xMax = 1024;\n  \n  $: val = param.value;\n  \n  let rangeMin = param.min < 0 ? xMin : 0;\n  let rangeMax = xMax;\n  \n  let normalisedRangeMin = param.min < 0 ? paramMin : 0;\n  let normalisedRangeMax = paramMax;\n  \n  let selectOptions = param.getSelectOptions();\n  let activeOption = param.getActiveSelectOption();\n  let hasDropdown = selectOptions !== null;\n  \n  $: displayValue = activeOption \n    ? activeOption.label\n    : formatValue(param.value);\n  \n  function updateVal(e) {\n    // take into account LERP from minmax\n    val = e.target.value;\n    param.value = val;\n    displayValue = activeOption\n    ? activeOption.label\n    : formatValue(param.value);\n  }\n  \n  function ensureInBounds (n) {\n    if (n > rangeMax) n = rangeMax;\n    if (n < rangeMin) n = rangeMin;\n    return n;\n  }\n  \n  function updateFromNormalised(e) {\n    let newVal = ensureInBounds(denormalise(e.target.value));\n    const syntheticEvent = { target: { value: newVal }};\n    updateVal(syntheticEvent);\n  }\n  \n  function updateMod(e) {\n    const modsrc = e.target.dataset.mod;\n    let newValue = ensureInBounds(denormalise(e.target.value));\n    param.mods[modsrc] = newValue;\n  }\n</script>\n\n<li>\n  <header>\n    <img src=\"icons/{param.icon}\" alt=\"\"/> \n    <span>{param.name}</span>\n    {#if !hasDropdown}\n    <input \n      type=\"number\" \n      value={displayValue}\n      max={normalisedRangeMax}\n      min={normalisedRangeMin}\n      on:change={updateFromNormalised}\n    />\n    {/if}\n  </header>\n  <main>\n  {#if hasDropdown}\n  <select\n    value={activeOption?activeOption.value:null}\n    on:change={updateVal}\n  >\n    {#each selectOptions as option, i}\n      <option value={option.value}>\n        {option.label}\n      </option>\n    {/each}\n  </select>\n  {:else}\n  <input \n    type=\"range\"\n    min={rangeMin}\n    max={rangeMax}\n    step={1}\n    value={val}\n    on:input={updateVal}\n    passive={false}\n  />\n  {/if}\n  <div class=\"mods\">\n    <table>\n      <tr>\n        <td>Base</td>\n        <td>\n          <input\n            type=\"number\"\n            value={displayValue}\n            max={normalisedRangeMax}\n            min={normalisedRangeMin}\n            on:change={updateFromNormalised}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>Env</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"env\"\n            value={formatValue(param.mods.env)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>Pressure</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"pressure\"\n            value={formatValue(param.mods.pressure)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>A</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"a\"\n            value={formatValue(param.mods.a)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n    </table>\n    <table>\n      <tr>\n        <td>B</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"b\"\n            value={formatValue(param.mods.b)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>X</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"x\"\n            value={formatValue(param.mods.x)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>Y</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"y\"\n            value={formatValue(param.mods.y)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n      <tr>\n        <td>Random</td>\n        <td>\n          <input\n            type=\"number\"\n            data-mod=\"random\"\n            value={formatValue(param.mods.random)}\n            on:change={updateMod}\n          />\n        </td>\n      </tr>\n    </table>\n  </div>\n  <details class=\"description\">\n    <summary>Details</summary>\n    <p>{param.description}</p>\n  </details>\n</main>\n</li>\n\n\n<style>\n  li {\n    padding: 0;\n  }\n\n  header, main{\n    padding: 0.5rem;\n  }\n\n  header {\n    border-radius: 0.5rem 0.5rem 0 0;\n    display: flex;\n    gap:0.5rem;\n    flex-direction: row;\n    background-color:#28222e;\n    align-items: center;\n    color:white;\n  }\n\n  main{\n    border-radius: 0 0 0.5rem 0.5rem;\n    background-color:#f3f3f3;\n    border-style: solid;\n    border-color:#ccc;\n    border-width:0 2px 2px 2px;\n  }\n\n  header img {\n    height: 50px;\n  }\n\n  header span {\n    flex: 1 1;\n    display: block;\n  }\n\n  header input{\n    width:4em;\n    background-color:black;\n    color:white;\n    border-color:white;\n    border-width:1px;\n    border-radius: 4px;\n  }\n\n  main input,\n  main select{\n    width:100%;\n  }\n\n  .mods {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n  }\n\n  table {\n    width: 100%;\n  }\n\n  td {\n    padding-right: 16px;\n    font-size: 14px;\n    line-height: 18px;\n    border-bottom: 1px solid #efefef;\n  }\n\n  details {\n    padding: 0 16px 16px;\n  }\n\n  summary {\n    cursor: pointer;\n  }\n\n  details p {\n    margin: 0;\n    font-size: 12px;\n    line-height: 16px;\n  }\n</style>","<script>\n\n\timport 'robot3/debug';\n\timport { encode, decode } from 'uint8-to-base64';\n\timport { onMount } from \"svelte\";\n\timport { PlinkyMachine } from './lib/PlinkyMachine';\n\timport { state } from 'robot3';\n\timport { PatchCategories } from './lib/plinky/params';\n\timport { bytecompress, bytedecompress } from './lib/compress';\n  import ParamListItem from './Param.svelte'\n\n\tlet port;\n\tlet inref;\n\tlet inarrbufref;\n\tlet outref;\n\n\tconst { store, send, service } = PlinkyMachine;\n\n\tfunction compress(input) {\n\t\treturn input.split('').reduce((o, c) => {\n\t\t\tif (o[o.length - 2] === c && o[o.length - 1] < 35) o[o.length - 1]++;\n\t\t\telse o.push(c, 0);\n\t\t\treturn o;\n\t\t},[]).map(_ => typeof _ === 'number' ? _.toString(36) : _).join('');\n\t}\n\n\tfunction decompress(input) {\n\t\treturn input.split('').map((c,i,a)=>i%2?undefined:new Array(2+parseInt(a[i+1],36)).join(c)).join('');\n\t}\n\n\tonMount(() => {\n\t\tlet params = (new URL(document.location)).searchParams;\n\t\tlet patch = params.get(\"p\");\n\t\tif(patch) {\n\t\t\tconst decodedPatch = bytedecompress(decodeURIComponent(patch));\n\t\t\tconsole.log('patch: ', patch, decodedPatch);\n\t\t\tsend({\n\t\t\t\ttype: 'parsePatch',\n\t\t\t\tpatch: decodedPatch\n\t\t\t});\n\t\t}\n\t});\n\n\tasync function connect() {\n\t\tsend('connect');\n\t}\n\n\tfunction loadPatch() {\n\t\tif ($store.context.patchNumber < 0) $store.context.patchNumber = 0\n\t\tif ($store.context.patchNumber > 31) $store.context.patchNumber = 31\n\t\tsend({\n\t\t\ttype: 'loadPatch',\n\t\t\tpatchNumber: $store.context.patchNumber\n\t\t});\n\t}\n\n\tfunction savePatch() {\n\t\tif ($store.context.patchNumber < 0) $store.context.patchNumber = 0\n\t\tif ($store.context.patchNumber > 31) $store.context.patchNumber = 31\n\t\tsend({\n\t\t\ttype: 'savePatch',\n\t\t\tpatchNumber: $store.context.patchNumber\n\t\t});\n\t}\n\n\tfunction clearPatch() {\n\t\tconst uri = window.location.toString();\n\t\tif (uri.indexOf(\"?\") > 0) {\n\t\t\twindow.history.replaceState({}, document.title, uri.substring(0, uri.indexOf(\"?\")));\n\t\t}\n\t\tsend({\n\t\t\ttype: 'clearPatch'\n\t\t});\n\t}\n\n\n\t$: connected = ['connected', 'loadPatch', 'savePatch', 'randomise'].indexOf($store.state) > -1;\n\t$: disabled = ['loadPatch', 'savePatch'].indexOf($store.state) > -1;\n\t$: error = ['error'].indexOf($store.state) > -1;\n\t\t\n\tlet patchVal = $store.context.patchNumber + 1;\n\t\n\tlet setPatchVal = () => {\n\t\tconst zeroIndexPatchVal = patchVal - 1;\n\t\t$store.context.patchNumber = zeroIndexPatchVal;\n\t}\n\n\t$: linkUrl = $store.context.patch \n\t\t? location.protocol+'//'+location.host+location.pathname+'?p='+encodeURIComponent(bytecompress(new Uint8Array($store.context.patch.buffer)))\n\t\t: \"\"\n\n\tfunction selectBankItem(num) {\n\t\tconsole.log(num);\n\t}\n\t\n\tfunction updatePatchName (e) {\n\t\t$store.context.patch.name = e.target.value;\n\t}\n\t\t\n\tfunction updateCategory (e) {\n\t\t$store.context.patch.category = e.target.value;\n\t}\n\n\tfunction randomisePatch () {\n\t\tsend({\n\t\t\ttype: 'randomise'\n\t\t});\n\t}\n\n</script>\n\n<main>\n\t<h1>Plinky WebUSB editor</h1>\n\t<h2>Current state: {$store.state}</h2>\n\n\t{#if error}\n\t\t<p class=\"error\">{$store.context.error}</p>\n\t{/if}\n\n\t{#if !connected}\n\t\t<p>You need the 0.9l firmware (or newer) to use this. <a href=\"https://plinkysynth.com/firmware\">Download here!</a><br>\n\t\tPlease use a Chromium based browser like Google Chrome (Edge might work too). Firefox does not work currently.</p>\n\t{/if}\n\n\t<button style=\"display: {!connected ? 'block' : 'none'}\" on:click={connect}>Connect</button>\n\n\t<div style=\"display: {connected ? 'block' : 'none'}\">\n\t\t<h2>Patch</h2>\n\t\t<p>Per-patch operations - you can load and save patches on the device.</p>\n\t\t<label for=\"i-patch-number\">Patch number</label>\n\t\t<input \n\t\t\tmin=\"1\" \n\t\t\tmax=\"32\" \n\t\t\ttype=\"number\" \n\t\t\tdisabled={disabled} \n\t\t\tid=\"i-patch-number\" \n\t\t\tbind:value={patchVal} \n\t\t\ton:change={setPatchVal}\n\t\t/>\n\t\t<button disabled={disabled} on:click={loadPatch}>Load patch</button>\n\t\t<button disabled={disabled} on:click={savePatch}>Save patch</button>\n\n\t\t<!--\n\t\t<h2>Bank</h2>\n\n\t\t<button on:click|preventDefault={clearPatch}>Load full bank</button>\n\n\t\t<h3>Load patch to browser memory from bank:</h3>\n\t\t<div class=\"bank\">\n\n\t\t\t{#each $store.context.bank as bankItem}\n\t\t\t\t<button on:click|preventDefault={selectBankItem(bankItem.number)}>{bankItem.number+1}</button>\n\t\t\t{/each}\n\t\t\t\n\t\t</div>\n\t\t-->\n\t</div>\n\n\t<h2>Current patch</h2>\n\n\t{#if $store.context.patch}\n\n\t\t<p>This is the patch that has been loaded into the browser's memory.</p>\n\n\t\t<button on:click|preventDefault={clearPatch}>Clear patch in browser memory</button>\n\n\t\t<!--<p>Loaded: {$store.context.patch.buffer.byteLength} bytes</p>-->\n\t\t\n\t\t<h3>Link to patch</h3>\n\t\t<label for=\"i-link-url\">Link:</label>\n\t\t<input class=\"link\" value={linkUrl} id=\"i-link-url\">\n\n\t\t<h3>Patch name and category</h3>\n\t\t<input type=\"text\" maxlength=\"8\" value={$store.context.patch.name} on:change={updatePatchName} id=\"i-name\">\n\t\t<select on:blur={updateCategory} value={$store.context.patch.category} id=\"i-category\">\n\t\t\t{#each PatchCategories as category, i}\n\t\t\t\t<option value={i}>{category}</option>\n\t\t\t{/each}\n\t\t</select>\n\n\t\t<h3>Randomise patch</h3>\n\n\t\t<p>This will randomise the patch in the browser memory- if you want to transfer it over to Plinky, press \"Save patch\".</p>\n\n\t\t<button on:click|preventDefault={randomisePatch}>Randomise all base parameters except volume + dry/wet</button>\n\n\t\t<h3>Params</h3>\n\n\t\t<p>\n\t\t\tArp: {$store.context.patch.arp}<br>\n\t\t\tLatch: {$store.context.patch.latch}<br>\n\t\t\tLoop start: {$store.context.patch.loopStart}<br>\n\t\t\tLoop length: {$store.context.patch.loopLength}<br>\n\t\t</p>\n\n\t\t<ul class=\"params\">\n\t\t\t{#each $store.context.patch.params as param}\n\t\t\t\t{#if param.name && !param.name.endsWith('_UNUSED')}\n\t\t\t\t\t<ParamListItem bind:param={param} />\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t</ul>\n\t{:else}\n\t\t<p>No patch in browser memory</p>\n\t{/if}\n\n</main>\n\n<style>\n\t.params {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n\t\tgap: 8px;\n\t\t\n\t\tmargin: 0;\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t}\n\t.link {\n    \twidth: 480px;\n  \t}\n\tmain {\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n\t}\n\th1 {\n\t\tmargin-top: 0;\n\t}\n\tbutton {\n\t\tpadding: 6px 12px;\n\t\tmargin: 0;\n\t\tdisplay: inline-block;\n\t}\n</style>","// takes a 1152 element array b and turns into a short base64 string\nexport function bytecompress(b) {\n  // swizzle b->bo\n  var bo=new Uint8Array(1552);\n  for (var i=0;i<1552;i++) bo[i]=b[(i%97)*16+((i/97)|0)];\n  var bc=[];\n  for (var i=0;i<1552;) {\n    var from=i;\n    for (;i<1552 && i<from+255 && (bo[i]|| bo[i+1]);++i);\n    bc.push(i-from);\n    for (var j=from;j<i;++j) bc.push(bo[j]);\n    from=i;\n    for (;i<1552 && i<from+255 && !bo[i];++i);\n    bc.push(i-from);  \n  }\n  const compressed = btoa(String.fromCharCode.apply(null, bc));\n  const uriSafe = compressed\n    .replace(/\\//g, \"-\")\n    .replace(/=/g, \"_\")\n    .replace(/\\+/g, \".\")\n  return uriSafe\n}\n\n// takes a short base64 string and returns a 1152 element Uint8Array\nexport function bytedecompress(s) {\n  s = s\n    .replace(/-/g, \"/\")\n    .replace(/_/g, \"=\")\n    .replace(/\\./g, \"+\")\n  var xx=atob(s).split('').map(function (c) { return c.charCodeAt(0); });\n  var o=[];\n  for (var i=0;i<xx.length;) {\n    var len=xx[i++];\n    for (var j=0;j<len;++j) o.push(xx[i++]);\n    len=xx[i++];\n    for (var j=0;j<len;++j) o.push(0);\n  }\n  // unswizzle o->b\n  var b=new Uint8Array(1552);\n  for (var i=0;i<1552;i++) b[(i%97)*16+((i/97)|0)]=o[i]|0;    \n  return b;  \n}","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","valueEnumerable","enumerable","valueEnumerableWritable","writable","truthy","empty","identity","callBoth","par","self","args","apply","callForward","freeze","stack","def","caller","reduce","fnType","reduceType","bind","action","ev","guardType","guard","Type","arr","isPrototypeOf","makeTransition","to","guards","t","reducers","transitionType","immediateType","transition","immediate","enterImmediate","machine","service","transitionTo","immediates","transitionsToMap","transitions","get","stateType","enter","state","desc","final","invokePromiseType","send","catch","error","invokeMachineType","child","interpret","s","onChange","invoke","current","states","createMachine","contextFn","_create","fromEvent","candidates","original","newMachine","_onEnter","eventName","currentStateName","_send","initialContext","getPrototypeOf","unknownState","hasErrorFrom","console","warn","processHeader","Uint8Array","header","slot","processedBytes","bytesToProcess","result","log","hasHeader","byteLength","readBytes","hasNoMoreData","async","sendLoadRequest","port","patchNumber","buf","PatchLoadMachine","idle","getHeader","read","finished","PatchSaveMachine","patch","buffer","currentIteration","setHeader","ArrayBuffer","DataView","setUint32","len","getDataFromPatch","write","start","end","slice","BankLoadMachine","bank","sendHeader","nextPatch","subscriber_queue","MachineStore","_service","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","EParams","PatchCategories","PlinkyParams","id","min","max","offset","cc","description","enum_id","enum_name","default","remap","denormalise","x","formatValue","v","num","Math","round","Number","EPSILON","paramIconMap","P_PWM","P_DRIVE","P_PITCH","P_OCT","P_GLIDE","P_INTERVAL","P_NOISE","P_MIXRESO","P_ROTATE","P_SCALE","P_MICROTUNE","P_STRIDE","P_SENS","P_A","P_D","P_S","P_R","P_ENV1_UNUSED","P_ENV_LEVEL1","P_A2","P_D2","P_S2","P_R2","P_ENV2_UNUSED","P_DLSEND","P_DLTIME","P_DLRATIO","P_DLWOB","P_DLFB","P_TEMPO","P_RVSEND","P_RVTIME","P_RVSHIM","P_RVWOB","P_RVUNUSED","P_SWING","P_ARPONOFF","P_ARPMODE","P_ARPDIV","P_ARPPROB","P_ARPLEN","P_ARPOCT","P_LATCHONOFF","P_SEQMODE","P_SEQDIV","P_SEQPROB","P_SEQLEN","P_GATE_LENGTH","P_SMP_POS","P_SMP_GRAINSIZE","P_SMP_RATE","P_SMP_TIME","P_SAMPLE","P_SEQPAT","P_JIT_POS","P_JIT_GRAINSIZE","P_JIT_RATE","P_JIT_PULSE","P_JIT_UNUSED","P_SEQSTEP","P_ASCALE","P_AOFFSET","P_ADEPTH","P_AFREQ","P_ASHAPE","P_AWARP","P_BSCALE","P_BOFFSET","P_BDEPTH","P_BFREQ","P_BSHAPE","P_BWARP","P_XSCALE","P_XOFFSET","P_XDEPTH","P_XFREQ","P_XSHAPE","P_XWARP","P_YSCALE","P_YOFFSET","P_YDEPTH","P_YFREQ","P_YSHAPE","P_YWARP","P_MIXSYNTH","P_MIXWETDRY","P_MIXHPF","P_MIX_UNUSED","P_CV_QUANT","P_HEADPHONE","P_MIXINPUT","P_MIXINWETDRY","P_SYS_UNUSED1","P_SYS_UNUSED2","P_SYS_UNUSED3","P_ACCEL_SENS","Param","params","assign","mods","env","val","pressure","y","random","displayValue","activeOption","getActiveSelectOption","label","values","getSelectOptions","width","floor","icon","entry","includes","range","randomness","parseInt","Patch","param","Int16Array","plinkyParam","find","bitFieldUInt8","bitFieldInt8","Int8Array","arp","latch","loopStart","loopLength","category","nameArray","str","String","fromCharCode","charCode","charCodeAt","isNaN","randomise","byteOffset","Port","EventTarget","device","super","interfaceNumber","endpointIn","endpointOut","queue","transferInflight","interfaces","configuration","alternates","elementalt","interfaceClass","endpoints","elementendpoint","direction","endpointNumber","readLoop","transferIn","onReceive","onReceiveError","open","selectConfiguration","setEndpoints","claimInterface","selectAlternateInterface","err","controlTransferOut","requestType","recipient","request","close","transferOut","shift","e","unshift","stopQueue","queueInterval","setInterval","processQueue","clearInterval","filters","vendorId","WebUSBPlinky","PlinkyMachine","connect","constructor","navigator","usb","getDevices","devices","requestDevice","requestPort","disconnected","arrayBuffer","patchObject","window","currentPatch","connecting","connected","clearPatch","loadPatch","patchData","prototype","concat","savePatch","loadBank","number","path","createPlinkyMachine","t0_value","option_value_value","t1_value","t31_value","create_if_block_1","create_if_block","img","src","img_src_value","input1","input1_value_value","input2","input2_value_value","input3","input3_value_value","input4","input4_value_value","input5","input5_value_value","input6","input6_value_value","input7","input7_value_value","li","span","main","div","table0","tr0","td0","td1","input0","tr1","td2","td3","tr2","td4","td5","tr3","td6","td7","table1","tr4","td8","td9","tr5","td10","td11","tr6","td12","td13","tr7","td14","td15","details","summary","t1","if_block0","t31","rangeMin","rangeMax","normalisedRangeMin","selectOptions","hasDropdown","updateVal","$$invalidate","ensureInBounds","n","modsrc","dataset","mod","newValue","t_value","t22_value","t24_value","t26_value","t28_value","each_value","p0","button0","h30","h31","h32","p1","button1","h33","p2","br0","br1","br2","br3","ul","select_value_value","t22","t24","t26","t28","each_blocks","undefined","endsWith","t3_value","create_if_block_3","create_if_block_2","h1","h20","h21","button2","h22","t3","URL","location","searchParams","decodedPatch","replace","xx","atob","split","j","bytedecompress","decodeURIComponent","patchVal","$store","disabled","linkUrl","protocol","host","pathname","encodeURIComponent","bo","bc","btoa","bytecompress","uri","toString","history","replaceState","title","substring","zeroIndexPatchVal","body"],"mappings":"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,EAAQ0Q,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBrP,OACpC,IAAK,MAAM4P,KAAcH,EACrBG,EAAW,KACXP,GAAiB5Q,KAAKmR,EAAY5Q,GAEtC,GAAI2Q,EAAW,CACX,IAAK,IAAI5P,EAAI,EAAGA,EAAIsP,GAAiBrP,OAAQD,GAAK,EAC9CsP,GAAiBtP,GAAG,GAAGsP,GAAiBtP,EAAI,IAEhDsP,GAAiBrP,OAAS,IAuB1C,MAAO,CAAEf,IAAAA,EAAK0E,OAlBd,SAAgB5G,GACZkC,EAAIlC,EAAGiC,KAiBWJ,UAftB,SAAmB9B,EAAK+S,EAAahT,GACjC,MAAM+S,EAAa,CAAC9S,EAAK+S,GAMzB,OALAJ,EAAY3L,IAAI8L,GACS,IAArBH,EAAYK,OACZN,EAAOV,EAAM7P,IAAQpC,GAEzBC,EAAIkC,GACG,KACHyQ,EAAY1K,OAAO6K,GACM,IAArBH,EAAYK,OACZN,IACAA,EAAO,SC9BPvH,CAAS,CACrB4C,MAAOT,EAAQsB,QACfrF,QAASgE,EAAQhE,UAGb4E,EAAOZ,EAAQY,KAErB,MAAO,CAAE5M,MAAAA,EAAO4M,KAAAA,EAAMZ,QAAAA,IC5BX0F,GAAU,CACrB,QACA,UACA,UACA,QACA,UACA,aACA,UACA,YACA,WACA,UACA,cACA,WACA,SACA,MACA,MACA,MACA,MACA,gBACA,eACA,OACA,OACA,OACA,OACA,gBACA,WACA,WACA,YACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,aACA,UACA,aACA,YACA,WACA,YACA,WACA,WACA,eACA,YACA,WACA,YACA,WACA,gBACA,YACA,kBACA,aACA,aACA,WACA,WACA,YACA,kBACA,aACA,cACA,eACA,YACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,aACA,cACA,WACA,eACA,aACA,cACA,aACA,gBACA,gBACA,gBACA,gBACA,gBAGWC,GAAkB,CAC7B,GACA,OACA,QACA,OACA,OACA,SACA,SACA,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"}